import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;

public class ImageViewer3 extends JFrame{
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JMenuItem jmiSave;
	private JMenuItem jmiSaveAs;
	private JMenuItem jmiClose;
	private JMenuItem jmiUndo;
	private JMenuItem jmiRedo;
	/*private JButton jbEdit;
	private JButton jbCrop;
	private JButton jbRotate;
	private JButton jbMirror;
	private JButton jbResize;
	private JButton jbDelete;
	private JButton jbOpen;
	private JButton jbNew;*/
	private int cur = 0;
	
	/**
	 * Constructor for ImageViewer
	 * Builds Graphical User Interface that will allow client to
	 * interact with and use application
	 */
	public ImageViewer3(){
		//JFrame
		setSize(850, 700);
		setTitle("ImageViewer");
		
		//Components for JFrame
		//MenuBar & Menu + MenuItems
		JMenuBar jmbMenuBar = new JMenuBar();
		JMenu jmFile = new JMenu("File");
			jmiSave = new JMenuItem("Save");
			jmiSaveAs = new JMenuItem("SaveAs");
			jmiClose = new JMenuItem("Close");
			jmFile.add(jmiSave);
			jmFile.add(jmiSaveAs);
			jmFile.add(jmiClose);
		jmbMenuBar.add(jmFile);
		JMenu jmEdit = new JMenu("Edit");
			jmiUndo = new JMenuItem("Undo");
			jmiRedo = new JMenuItem("Redo");
			jmEdit.add(jmiUndo);
			jmEdit.add(jmiRedo);
		jmbMenuBar.add(jmEdit);
		setJMenuBar(jmbMenuBar);
		
		// Option bar for images
		/*JPanel jpOptions = new JPanel();
			jbEdit = new JButton("Edit");
			jbDelete = new JButton("Delete");
			jpOptions.add(jbEdit);
				jbCrop = new JButton("Crop");
				//jbCrop.setVisible(false);
				jbRotate = new JButton("Rotate");
				//jbRotate.setVisible(false);
				jbResize = new JButton("Resize");
				//jbResize.setVisible(false);
				jbMirror = new JButton("Mirror");
				//jbMirror.setVisible(false);
			jpOptions.add(jbCrop);
			jpOptions.add(jbRotate);
			jpOptions.add(jbResize);
			jpOptions.add(jbMirror);
			jpOptions.add(jbDelete);
		add(jpOptions, BorderLayout.NORTH);*/
		
		JPanel jpImages = new JPanel(new CardLayout());
			ArrayList<CustomImage> alImages = new ArrayList<CustomImage>();
				alImages.add(new CustomImage("balloon-hot-air.jpg"));
				alImages.add(new CustomImage("beaver-lodge-on-martin-lake.jpg"));
				alImages.add(new CustomImage("beer-and-bread.jpg"));
				alImages.add(new CustomImage("bengal-tiger.jpg"));
				alImages.add(new CustomImage("biking-at-chincoteague-national-wildlife-refuge.jpg"));
				alImages.add(new CustomImage("cactus-photo.jpg"));
				alImages.add(new CustomImage("chinese-dragons-flat-stanley.jpg"));
				alImages.add(new CustomImage("cliffs-yosemite-halfdome-sierras.jpg"));
				alImages.add(new CustomImage("columbia-shuttle-start.jpg"));
				alImages.add(new CustomImage("decomposing-cow-skull.jpg"));
				alImages.add(new CustomImage("first-man-on-moon-walking-on-the-moon.jpg"));
				alImages.add(new CustomImage("great-fireworks-night.jpg"));
				alImages.add(new CustomImage("man-checking-gill-nets.jpg"));
				alImages.add(new CustomImage("rock-climber-on-the-wall.jpg"));
				alImages.add(new CustomImage("soldier-on-military-boat.jpg"));
				alImages.add(new CustomImage("spring-in-hills.jpg"));
				alImages.add(new CustomImage("the-manna-organic-shop-kilcullen.jpg"));
				alImages.add(new CustomImage("tower-bridge-in-london-england.jpg"));
				alImages.add(new CustomImage("winter-road.jpg"));
				alImages.add(new CustomImage("wooden-window.jpg"));
				alImages.add(new CustomImage("yankees-stadium-crowd.jpg"));
				alImages.add(new CustomImage("yard-gate.jpg"));
				
			int numCards;
			if(alImages.size() % 4 == 0){
				numCards = alImages.size()/4;
			}
			else{
				numCards = alImages.size()/4 + 1;
			}
			
			ArrayList<JPanel> alCards = new ArrayList<JPanel>();
			int k = alImages.size() -1;
			int x = 0;
			while(x < k){
				//System.out.println("while");
				for(int i = 1; i <= numCards; i++)
				{
					//System.out.println("In outer for loop");
					JPanel jpImageGrid = new JPanel(new GridLayout(0,2,20,20));
						for(int j=0; j < 4; j++){
							//System.out.println(x);
							if(x < k){
								CustomImage img = alImages.get(x);
								
								//System.out.println(img.toString());
								
								jpImageGrid.add(img);
								x++;
								//k--;
							}
							else{
								break;
							}
						}
						//jpImageGrid.add(new JLabel("Images"));
					alCards.add(jpImageGrid);
					jpImages.add(jpImageGrid);
				}
			}
		
		add(jpImages);
		JPanel jpButtons = new JPanel();
			JButton jbPrev = new JButton("Previous");
				jbPrev.setEnabled(false);
			JButton jbNext = new JButton("Next");
			jpButtons.add(jbPrev);
			jpButtons.add(jbNext);
		add(jpButtons, BorderLayout.SOUTH);
		
			jbNext.addActionListener(new ActionListener(){
				public void actionPerformed(ActionEvent ae){
					jbPrev.setEnabled(true);
					if(cur == numCards -1){
						jbNext.setEnabled(false);
					}
					else{
						alCards.get(cur).setVisible(false);
						alCards.get(cur+1).setVisible(true);
						cur++;
						if(cur == numCards -1){
							jbNext.setEnabled(false);
						}
					}
				}
			});
			jbPrev.addActionListener(new ActionListener(){
				public void actionPerformed(ActionEvent ae){
					jbNext.setEnabled(true);
					if(cur == 0){
						jbPrev.setEnabled(false);
					}
					else{
						alCards.get(cur).setVisible(false);
						alCards.get(cur-1).setVisible(true);
						cur--;
						if(cur == 0){
							jbPrev.setEnabled(false);
						}
					}
					
				}
			});
		
			
		// Panel -- Card Layout
		/*JPanel jpCards = new JPanel(new CardLayout());
			// Card #1 - Albums
			JPanel jpAlbums = new JPanel();
				JPanel jpAlbumList = new JPanel();
					jbNew = new JButton("New Album");
					jbOpen = new JButton("Open Album");
				jpAlbumList.add(jbNew);
			jpAlbums.add(jpAlbumList, BorderLayout.WEST);
		jpCards.add(jpAlbums);
		
			
			
			
			
		add(jpCards, BorderLayout.CENTER);*/
		
		
		
		// JFrame configuration
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setLocationRelativeTo(null);
		setVisible(true);
		
	}
}
